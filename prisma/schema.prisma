// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Profissional {
  id                String     @id @default(cuid())
  nome              String
  email             String     @unique
  especialidade     String
  valorHora         Float?     // Opcional agora (pode ser null para contratos fechados)
  status            String     @default("ativo") // ativo, inativo, ferias
  dataInicio        String     // Data de início (renomeado de dataAdmissao)
  tipoContrato      String     @default("hora") // hora, fechado
  valorFechado      Float?     // Valor do contrato fechado
  periodoFechado    String?    // mensal, trimestral, semestral, anual
  valorPago         Float      // Valor bruto pago ao profissional
  tags              String?    // Tags separadas por vírgula (ex: "Alocação,Projetos,Bodyshop")
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt

  // Relacionamentos
  contratos         ContratoProfissional[]

  @@map("profissionais")
}

model Cliente {
  id          String     @id @default(cuid())
  nome        String
  empresa     String
  email       String     @unique
  telefone    String?
  endereco    String?
  anoInicio   Int        // Ano de início do relacionamento com a Matilha
  segmento    String     // Segmento de atuação
  tamanho     String     @default("Média") // Pequena, Média, Grande
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  // Relacionamentos
  contratos   Contrato[]

  @@map("clientes")
}

model Contrato {
  id                 String   @id @default(cuid())
  nomeProjeto        String   // Nome do projeto
  clienteId          String
  dataInicio         String
  dataFim            String?
  tipoContrato       String   @default("hora") // hora, fechado
  valorContrato      Float    // Valor total do contrato
  valorImpostos      Float    // Valor dos impostos
  percentualImpostos Float    @default(13.0) // Percentual de impostos
  status             String   @default("ativo") // ativo, encerrado, pendente
  observacoes        String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  // Relacionamentos
  cliente            Cliente      @relation(fields: [clienteId], references: [id], onDelete: Cascade)
  profissionais      ContratoProfissional[]
  despesasAdicionais DespesaAdicional[]

  @@map("contratos")
}

model DespesaAdicional {
  id          String   @id @default(cuid())
  contratoId  String
  descricao   String   // Ex: "Software", "Risco", "Infraestrutura"
  valor       Float    // Valor da despesa
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relacionamentos
  contrato    Contrato @relation(fields: [contratoId], references: [id], onDelete: Cascade)

  @@map("despesas_adicionais")
}

model ContratoProfissional {
  id             String   @id @default(cuid())
  contratoId     String
  profissionalId String
  valorHora      Float?   // Para contratos por hora
  horasMensais   Int?     // Para contratos por hora
  valorFechado   Float?   // Para contratos fechados
  periodoFechado String?  // mensal, trimestral, semestral, anual
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relacionamentos
  contrato       Contrato     @relation(fields: [contratoId], references: [id], onDelete: Cascade)
  profissional   Profissional @relation(fields: [profissionalId], references: [id], onDelete: Cascade)

  @@unique([contratoId, profissionalId])
  @@map("contrato_profissionais")
}
